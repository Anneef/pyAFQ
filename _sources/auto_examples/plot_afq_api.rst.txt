.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_afq_api.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_afq_api.py:


==========================
AFQ API
==========================

An example using the AFQ API


.. code-block:: default

    import os.path as op

    import matplotlib.pyplot as plt
    import nibabel as nib
    import pandas as pd

    from AFQ import api
    import AFQ.data as afd






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/arokem/.virtualenvs/afq/lib/python3.7/site-packages/dask/config.py:168: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
      data = yaml.load(f.read()) or {}
    /Users/arokem/.virtualenvs/afq/lib/python3.7/site-packages/dipy/stats/__init__.py:7: UserWarning: The `dipy.stats` module is still under heavy development and functionality, as well as the API is likely to change in future versions of the software
      warnings.warn(w_string)



Get some example data
---------------------


.. code-block:: default


    afd.organize_stanford_data()
    base_dir = op.join(op.expanduser('~'), 'AFQ_data', 'stanford_hardi')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Dataset is already in place. If you want to fetch it again please first remove the folder /Users/arokem/.dipy/stanford_hardi 



Initialize an AFQ object:
------------------------


.. code-block:: default


    myafq = api.AFQ(op.join(afd.afq_home,
                            'stanford_hardi',
                            'derivatives',
                            'dmriprep'),
                    sub_prefix='sub')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Dataset is already in place. If you want to fetch it again please first remove the folder /Users/arokem/AFQ_data/templates 
    Dataset is already in place. If you want to fetch it again please first remove the folder /Users/arokem/AFQ_data/callosum_templates 
    Data size is approximately 70MB
    Dataset is already in place. If you want to fetch it again please first remove the folder /Users/arokem/.dipy/mni_template 



Reading in DTI FA
-----------------
The AFQ object holds a table with file-names to various data derivatives.
For example, this is where the FA computed from DTI is stored.

.. note::

   The AFQ API computes quantities lazily. This means that DTI parameters
   are  not computed until they are required. This means that the first
   line below is the one that requires time.


.. code-block:: default


    FA_fname = myafq.dti_fa[0]
    FA = nib.load(FA_fname).get_fdata()








Visualize the result with Matplotlib
-------------------------------------
At this point `FA` is an array, and we can use standard Python tools to
visualize it or perform additional computations with it:


.. code-block:: default

    fig, ax = plt.subplots(1)
    ax.matshow(FA[:, :, FA.shape[-1] // 2], cmap='viridis')
    ax.axis("off")





.. image:: /auto_examples/images/sphx_glr_plot_afq_api_001.png
    :class: sphx-glr-single-img




Getting tract profiles:
-------------------------
The computation below is quite time-consuming. For this reason, we have
commented it out for now. If you want to run it through, uncomment then next
few lines and go get a cup of coffee:

.. note::
    Note that because of a quirk in the way that brain segmentation was
    generated in this data, some bundles will not be detected using the
    detected using the default values. For example, the corticospinal tracts
    on both sides will not be properly detected because the waypoint ROIs for
    these tracts fall into parts of the white matter that were not segmented.


.. code-block:: default


    # df = pd.read_csv(myafq.tract_profiles[0])
    # for bundle in df['bundle'].unique():
    #     fig, ax = plt.subplots(1)
    #     ax.plot(df[(df['scalar'] == "dti_fa")
    #             & (df['bundle'] == bundle)]['profiles'])
    #     ax.set_title(bundle)

    plt.show()







.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.844 seconds)


.. _sphx_glr_download_auto_examples_plot_afq_api.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_afq_api.py <plot_afq_api.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_afq_api.ipynb <plot_afq_api.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
